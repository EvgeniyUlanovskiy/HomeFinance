package model;

import java.io.*;

/********************************************************************************************************************************
 * ************************************** Класс для работы с вводом/выводом данный в файл ****************************************
 ********************************************************************************************************************************/

public class FileWorker {

    /********************************************************************************************************************************
     * **************************************** Метод который проверяет существует ли файл *******************************************
     ********************************************************************************************************************************/

    private static void exists(String fileName) throws FileNotFoundException {
        File file = new File(fileName);
        if (!file.exists()) {
            throw new FileNotFoundException(file.getName());
        }
    }

    /********************************************************************************************************************************
     * ********************************************** Метод для записи данных в файл *************************************************
     ********************************************************************************************************************************/

    public static void write(String fileName, String text) {
        //Определяем файл
        File file = new File(fileName);


        try {
            //Проверяем, существует ли файл, если нет то создаем его
            if (!file.exists()) {
                file.createNewFile();
            }

            //Добавляем экземпляр класса для возможности записи в файл
            PrintWriter out = new PrintWriter(file.getAbsoluteFile());

            try {
                //Записываем данные в файл
                out.print(text);
            } finally {
                //Закрываем файл (сохраняем внесенные данные)
                out.close();
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    /********************************************************************************************************************************
     * ********************************************* Метод для чтения данных из файла ************************************************
     ********************************************************************************************************************************/

    public static String read(String fileName) throws FileNotFoundException {
        //Добавляем экземпляр класса для создание строк
        StringBuilder sb = new StringBuilder();

        //Определяем файл и проверяем существует ли он
        File file = new File(fileName);
        exists(fileName);
        try {
            //Добавляем экземпляр класса для чтения файла в буфер(для считывания кол-ва строк в файле)
            BufferedReader fileLenght = new BufferedReader(new FileReader(file.getAbsoluteFile()));
            String s;       //***Добовляем необходимые переменные***\\
            int count = 0;  //**************************************\\
            try {
                //В цикле построчно считываем файл для определения кол-ва строк
                while ((s = fileLenght.readLine()) != null) {
                    count++;
                }

                //Закрываем поток
                fileLenght.close();

                //Открываем новый поток для чтения файла в буфер(для считывания самого файла)
                BufferedReader in = new BufferedReader(new FileReader(file.getAbsoluteFile()));

                //Если кол-во строк в файле больше одной, то при считывании добовляем символ перевода строки
                if (count > 1) {
                    while ((s = in.readLine()) != null) {
                        sb.append(s);
                        sb.append("\n");
                    }
                } else {
                    s = in.readLine();
                    return s;
                }
            } finally {
                //Также не забываем закрыть файл
                fileLenght.close();
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        //Возвращаем полученный текст с файла
        return sb.toString();
    }

    /********************************************************************************************************************************
     * ******************************************** Метод для обновления данных в файле **********************************************
     ********************************************************************************************************************************/

    public static void update(String fileName, String newText) throws FileNotFoundException {
        //Проверяем, существует ли файл
        exists(fileName);
        //Добавляем экземпляр класса для создание строк
        StringBuilder sb = new StringBuilder();
        //Считываем старые данные из файла
        String oldFile = read(fileName);
        //Объединяем старые данные с новыми
        sb.append(oldFile);
        sb.append(newText);
        //Записываем данные в файл
        write(fileName, sb.toString());
    }
}
